<?php
namespace ArticlesManager\Controller;

use ArticlesManager\Controller\AppController;
use Cake\Event\Event;

/**
 * Additions Controller
 *
 * @property \ArticlesManager\Model\Table\AdditionsTable $Additions
 */
class AdditionsController extends AppController
{

    public function beforeRender(Event $event)
    {
        parent::beforeRender($event); // TODO: Change the autogenerated stub
        $this->viewBuilder()->layout('admin');
    }

    /**
     * Index method
     *
     * @return \Cake\Network\Response|null
     */
    public function index()
    {

        $additions = $this->paginate($this->Additions);

        $this->set(compact('additions'));
        $this->set('_serialize', ['additions']);
    }

    /**
     * View method
     *
     * @param string|null $id Addition id.
     * @return \Cake\Network\Response|null
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function view($id = null)
    {
        $addition = $this->Additions->get($id, [
            'contain' => ['Articles', 'Sections']
        ]);

        $this->set('addition', $addition);
        $this->set('_serialize', ['addition']);
    }

    /**
     * Add method
     *
     * @return \Cake\Network\Response|void Redirects on successful add, renders view otherwise.
     */
    public function add()
    {
        $addition = $this->Additions->newEntity();
        if ($this->request->is('post')) {
            $addition = $this->Additions->patchEntity($addition, $this->request->data);
            if ($this->Additions->save($addition)) {
                $this->Flash->success(__('The addition has been saved.'));

                return $this->redirect(['action' => 'index']);
            } else {
                $this->Flash->error(__('The addition could not be saved. Please, try again.'));
            }
        }
        $articles = $this->Additions->Articles->find('list', ['limit' => 200]);
        $sections = $this->Additions->Sections->find('list', ['limit' => 200]);
        $this->set(compact('addition', 'articles', 'sections'));
        $this->set('_serialize', ['addition']);
    }

    /**
     * Edit method
     *
     * @param string|null $id Addition id.
     * @return \Cake\Network\Response|void Redirects on successful edit, renders view otherwise.
     * @throws \Cake\Network\Exception\NotFoundException When record not found.
     */
    public function edit($id = null)
    {
        $addition = $this->Additions->get($id, [
            'contain' => ['Articles', 'Sections']
        ]);
        if ($this->request->is(['patch', 'post', 'put'])) {
            $addition = $this->Additions->patchEntity($addition, $this->request->data);
            if ($this->Additions->save($addition)) {
                $this->Flash->success(__('The addition has been saved.'));

                return $this->redirect(['action' => 'index']);
            } else {
                $this->Flash->error(__('The addition could not be saved. Please, try again.'));
            }
        }
        $articles = $this->Additions->Articles->find('list', ['limit' => 200]);
        $sections = $this->Additions->Sections->find('list', ['limit' => 200]);
        $this->set(compact('addition', 'articles', 'sections'));
        $this->set('_serialize', ['addition']);
    }

    /**
     * Delete method
     *
     * @param string|null $id Addition id.
     * @return \Cake\Network\Response|null Redirects to index.
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function delete($id = null)
    {
        $this->request->allowMethod(['post', 'delete']);
        $addition = $this->Additions->get($id);
        if ($this->Additions->delete($addition)) {
            $this->Flash->success(__('The addition has been deleted.'));
        } else {
            $this->Flash->error(__('The addition could not be deleted. Please, try again.'));
        }

        return $this->redirect(['action' => 'index']);
    }
}
